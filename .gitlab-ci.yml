image: docker:latest

services:
  - name: docker:dind
    alias: docker

stages:
  - build
  - deploy

variables:
  KUBECONFIG: /etc/deploy/kubeconfig.yaml
  DOCKER_HOST: tcp://docker:2375  # Replace unix:///var/run/docker.sock with tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s
  only:
    refs:
      - devops
      - develop
      - staging
      - master
      - main
      - production
  variables:
    RAILS_ENV: staging
    VERSION: staging-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
  environment:
    name: dev
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --build-arg rails_env=$RAILS_ENV --build-arg pusher_url=$PUSHER_URL --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $ECR_REGISTRY/$APP_NAME:$VERSION --cache=true --cache-repo $CACHE_REPO_IMAGE/cache



deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo $KUBECONFIG_FILE > $KUBECONFIG
    - kubectl config use-context my-eks-cluster
    - kubectl set image deployment/my-app my-app=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  environment:
    name: dev
  only:
    - master
